<?php
/**
 * Created by PhpStorm.
 * User: lenovo
 * Date: 2018/7/12
 * Time: 22:40
 */

namespace app\api\model;


use app\lib\exception\SuccessMessage;
use app\lib\exception\UserDetailException;
//普通用户
class userIntroduce extends BaseModel
{
    protected $autoWriteTimestamp = 'datetime';

    public function getUserIntroduce($open_id){
        return self::with(['relevanceImgUser'])->where('open_id',$open_id)->find();
    }

      public function postUserIntroduce($data){

      $result= $this->getUserIntroduce($data['open_id']);
         if($result){
             return   json(['result'=>$result,'statusCode'=>204,'msg'=>'用户已存在'],200);
         }else{
             return  $this->specific($data);
         }
      }
//具体提交方法
public function specific($data){
    // 用户信息
    $userIntroduce_model=new userIntroduce;
    $userIntroduce_model->data([
        'school_name'=>$data['school_name'],
        'school_id'=>$data['school_id'],
        'user_name'=>$data['user_name'],
        'user_gender'=>$data['user_gender'],
        'user_head'=>$data['user_head'],
        'occupation'=>$data['occupation'],
        'age'=>$data['age'],
        'address'=>$data['address'],
        'open_id'=>$data['open_id'],
         'idea'=>$data['idea'],
         'wxNumber'=>$data['wxNumber'],
         'hobby'=>$data['hobby'],
         'status_code'=>$data['status_code'],
        'formId'=>$data['formId'],
        'formId_status'=>$data['formId_status'],
    ]);
    $userIntroduce_model->save();
// 获取自增ID
    if($userIntroduce_model->id){
        $result= $this->add_shopImg($userIntroduce_model->id,$data);
        if($result){
            return   json(['result'=>$userIntroduce_model,'statusCode'=>200,'msg'=>'注册成功'],200);
        }
    }else{
        throw  new UserDetailException(['msg'=>'提交用户信息失败']);
    }
}


    public function add_shopImg($img_key,$data){
        $arr_s=[];
        //个人照
        foreach ($data['imgs'] as $item){
            $arr=[
                'img_key'=> $img_key,'img_url'=>$item,'img_type'=>$data['img_type']
            ];
            array_push($arr_s,$arr);
        }
        //饭卡照
        foreach ($data['meal_card'] as $item){
            $arr=[
                'img_key'=> $img_key,'img_url'=>$item,'img_type'=>3
            ];
            array_push($arr_s,$arr);
        }
        $img_s=new Img();

        $img_s->saveAll($arr_s);
        return $img_s;
    }


    //获取用户信息
    public function getUserData($sponsor_id){
        $result=self::with(['relevanceImgUser'])->where(['id'=>$sponsor_id])->find();
        if($result){
            return $result;
        }else{
            throw  new UserDetailException(['msg'=>'用户不存在']);
        }

    }
    public  function relevanceImgUser(){
        return $this->hasMany('img','img_key','id');
    }

    //获取申请，已审核，拉黑，用户
    public function getAllUserModel($size,$pageIndex){
      $data=  self::order('create_time desc')->paginate($size,false,['page'=>$pageIndex]);
        $result=  $data->toArray();
      if($result['total']>0){
       return   $this->forceGetAllUserModel($result);
      }else{
          return   json(['result'=>$result,'code'=>200,'msg'=>'暂时不存在任何用户'],200);
      }
    }

   public function forceGetAllUserModel($result){
        foreach ( $result['data'] as $key=>$value){
            $result['data'][$key]['imgS']= $this->getImg($value['id']);
       }
       return $result;
   }
   public function getImg($id){
       $img_s=new Img();
       return  $img_s->where(['img_key'=>$id])->select();
   }
}